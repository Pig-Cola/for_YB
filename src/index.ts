import './ipcMethods'

import { app, BrowserWindow, autoUpdater, dialog } from 'electron'

import isElectronSquirrelStartup from 'electron-squirrel-startup'
import { updateElectronApp } from 'update-electron-app'

import { createWindow } from './createWindow'
import { isDev } from './isDev'

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
// declare const MAIN_WINDOW_WEBPACK_ENTRY: string
// declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if ( isElectronSquirrelStartup ) {
  app.quit()
}

app.commandLine.appendSwitch( '--no-sandbox' )

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on( 'ready', () => {
  const win = createWindow()

  if ( !isDev ) {
    updateElectronApp( { notifyUser: false } )

    autoUpdater.on( 'update-downloaded', ( event, releaseNotes, releaseName, releaseDate, updateURL ) => {
      console.log( 'update-downloaded', [event, releaseNotes, releaseName, releaseDate, updateURL] )

      const dialogOpts = {
        type: 'info',
        buttons: ['지금 재시작', '나중에'],
        title: '업데이트 다운로드 성공',
        message: process.platform === 'win32' ? releaseNotes : releaseName,
        detail: '새 버전을 발견했습니다. 재시작시 업데이트가 적용됩니다.',
        cancelId: 1,
        noLink: true,
      } as Electron.MessageBoxOptions
      dialog.showMessageBox( win, dialogOpts ).then( ( { response } ) => {
        if ( response === 0 ) autoUpdater.quitAndInstall()
      } )
    } )
  }
} )

// Quit when all windows are closed, except on macOS. There, it's common
// for applications and their menu bar to stay active until the user quits
// explicitly with Cmd + Q.
app.on( 'window-all-closed', () => {
  if ( process.platform !== 'darwin' ) {
    app.quit()
  }
} )

app.on( 'activate', () => {
  // On OS X it's common to re-create a window in the app when the
  // dock icon is clicked and there are no other windows open.
  if ( BrowserWindow.getAllWindows().length === 0 ) {
    createWindow()
  }
} )

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and import them here.
